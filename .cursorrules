# Cursor 절대 규칙 - Next.js 프로젝트

## 🚫 절대 금지 사항

### 내비게이션 링크
- **절대로 `<a>` 태그를 사용하여 내부 페이지 라우팅을 하지 마세요**
- **반드시 Next.js의 `<Link>` 컴포넌트를 사용해야 합니다**
- 내부 링크에는 `import Link from 'next/link'`를 사용
- 외부 링크에만 `<a>` 태그 사용 (target="_blank"와 함께)

**❌ 잘못된 예:**
```jsx
<a href="/trainers">트레이너</a>
<a href="/reviews">후기</a>
```

**✅ 올바른 예:**
```jsx
import Link from 'next/link';

<Link href="/trainers">트레이너</Link>
<Link href="/reviews">후기</Link>

// 외부 링크만 <a> 태그 사용
<a href="https://example.com" target="_blank" rel="noopener noreferrer">외부 링크</a>
```

### 센터별 라우팅
- 센터별 페이지에서는 반드시 센터 컨텍스트를 유지한 링크 사용
- `currentCenter` prop이 있으면 센터별 경로 생성: `/${center}/페이지`
- 센터별 페이지에서 절대 경로(`/trainers`) 사용 금지

**✅ 센터별 링크 올바른 예:**
```jsx
// currentCenter가 'wangsimni'인 경우
<Link href={`/${center}/trainers`}>트레이너</Link>  // /wangsimni/trainers
<Link href={`/${center}/reviews`}>후기</Link>      // /wangsimni/reviews
```

### 코드 품질
- 사용하지 않는 import 제거
- console.log는 디버깅 완료 후 반드시 제거
- ESLint 에러 무시하지 말고 반드시 수정

## ✅ 권장 사항

### Next.js 15 App Router 사용법
- 동적 라우팅: `[center]` 폴더 구조 활용
- 메타데이터: `generateMetadata` 함수 사용
- 정적 생성: `generateStaticParams` 함수 사용

### 컴포넌트 설계
- props 타입 정의 필수
- currentCenter prop 전달로 센터별 동작 구현
- Tailwind + CSS 변수로 센터별 브랜딩 색상 적용

이 규칙을 따르지 않으면 빌드 실패 및 라우팅 오류가 발생합니다.
